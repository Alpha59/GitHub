#!/usr/bin/env python3
import sys, os
sys.path.append(os.getcwd())


desc ="Allows a user to edit and comment on a file/line in a PR, as well as view the comments on the current PR review branch. Specifiying no parameters will simply display comments on this PR."
def args_adder(parser):
    parser.add_argument('-n', '--new', type=str, help="Allows the user to create a new comment at a specific file/line")
    parser.add_argument('-f', type=str, help="Name of file to comment on")
    parser.add_argument('-l', '--line', type=str, help="Line number to leave comment on")

    parser.add_argument('-r', '--reply', type=str,help="Allows the user to reply to a specific comment on the thread")
    parser.add_argument('-d', '--delete', type=str,help="Allows the user to delete a comment")
    parser.add_argument('-e', '--edit', type=str,help="Allows the user to edit a comment")
    parser.add_argument('-i', '--cid', type=str, help="Comment id for parent comment, or comment to delete/edit")

    parser.add_argument('-a', '--approve', type=str,help="Marks the PR as approved by this user, allows a comment to be added", default=":+1:")
    parser.add_argument('-q', '--question', type=str,help="Allows users to leave a question, leaves the comment on the conversation", default=":question:")
    parser.add_argument('-r', '--reject', type=str,help="Marks this PR as Rejected, and takes a comment as to why.")
    parser.add_argument('-c', '--close', type=str,help="Marks this PR as Closed without merging, this requires 2 users to reject, and takes a comment as to why")
    parser.add_argument('-f', '--force', type=str,help="Ignores the 2 user approval / denial requirements, and takes a comment as to why")


def run(new, f, line, reply, delete, edit, cid, verbose):
    pass

def console(output, verbose):
    print output

#########################################################################
# Boiler plate code to create a new module / command line module to be used.
#########################################################################
import boilerplate
boilerplate.create(__name__, desc, args_adder, run, console)
